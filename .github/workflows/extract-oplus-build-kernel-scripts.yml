name: Extract oplus_build_kernel.sh and called scripts from repo workspace

on:
  workflow_dispatch:

jobs:
  extract_oplus_build_kernel:
    runs-on: ubuntu-latest
    steps:
      - name: 安装repo工具
        run: |
          curl --retry 3 https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: 初始化repo并同步源码
        run: |
          mkdir -p kernel_workspace
          cd kernel_workspace
          # 你可以根据实际manifest参数调整
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git \
            -b refs/heads/oneplus/sm8550 \
            -m oneplus_ace3_v.xml --depth=1
          repo sync --force-sync --no-tags --no-clone-bundle -j$(nproc)

      - name: 查找并输出 oplus_build_kernel.sh 及其调用脚本
        run: |
          cd kernel_workspace
          file_path=$(find . -type f -name "oplus_build_kernel.sh" | head -n 1)
          if [[ -z "$file_path" ]]; then
            echo "::error::未找到 oplus_build_kernel.sh"
            exit 1
          fi
          echo "主脚本路径: $file_path"
          mkdir -p ../extracted_script
          cp "$file_path" ../extracted_script/

          # 用数组保存已处理脚本，避免重复
          declare -a SCRIPT_QUEUE
          declare -A SEEN

          SCRIPT_QUEUE+=("$file_path")
          SEEN["$file_path"]=1

          while [ ${#SCRIPT_QUEUE[@]} -gt 0 ]; do
            curr_script="${SCRIPT_QUEUE[0]}"
            SCRIPT_QUEUE=("${SCRIPT_QUEUE[@]:1}")

            # 查找source和直接调用的sh脚本
            called=$(grep -oE '(source +[./a-zA-Z0-9_/.-]+|\.\/[./a-zA-Z0-9_/.-]+\.sh)' "$curr_script" | awk '{print $NF}' | sort | uniq)
            for script in $called; do
              # 去掉参数，只保留脚本路径部分
              script_path="${script%% *}"
              # 若是相对路径，补全
              abs_path=$(dirname "$curr_script")/"$script_path"
              abs_path=$(realpath "$abs_path" 2>/dev/null || echo "")
              # 兼容部分绝对路径写法
              if [[ ! -f "$abs_path" ]]; then
                abs_path=$(find . -type f -name "$(basename "$script_path")" | head -n 1)
              fi
              if [[ -f "$abs_path" && -z "${SEEN["$abs_path"]}" ]]; then
                echo "发现被调用脚本: $abs_path"
                cp "$abs_path" ../extracted_script/
                SCRIPT_QUEUE+=("$abs_path")
                SEEN["$abs_path"]=1
              fi
            done
          done

          # 展示所有提取出的脚本内容
          echo "==== 脚本内容预览 ===="
          for sc in ../extracted_script/*.sh; do
            echo "------ $sc ------"
            cat "$sc"
            echo
          done

      - name: 上传所有提取脚本
        uses: actions/upload-artifact@v4
        with:
          name: oplus_kernel_build_scripts
          path: extracted_script/*.sh
